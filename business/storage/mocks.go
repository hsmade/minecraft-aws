// Code generated by MockGen. DO NOT EDIT.
// Source: minecraft-catalog/business/storage (interfaces: ClientModel)

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
	gomock "github.com/golang/mock/gomock"
)

// MockClientModel is a mock of ClientModel interface.
type MockClientModel struct {
	ctrl     *gomock.Controller
	recorder *MockClientModelMockRecorder
}

// MockClientModelMockRecorder is the mock recorder for MockClientModel.
type MockClientModelMockRecorder struct {
	mock *MockClientModel
}

// NewMockClientModel creates a new mock instance.
func NewMockClientModel(ctrl *gomock.Controller) *MockClientModel {
	mock := &MockClientModel{ctrl: ctrl}
	mock.recorder = &MockClientModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientModel) EXPECT() *MockClientModelMockRecorder {
	return m.recorder
}

// ListObjectsV2 mocks base method.
func (m *MockClientModel) ListObjectsV2(arg0 context.Context, arg1 *s3.ListObjectsV2Input, arg2 ...func(*s3.Options)) (*s3.ListObjectsV2Output, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListObjectsV2", varargs...)
	ret0, _ := ret[0].(*s3.ListObjectsV2Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjectsV2 indicates an expected call of ListObjectsV2.
func (mr *MockClientModelMockRecorder) ListObjectsV2(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjectsV2", reflect.TypeOf((*MockClientModel)(nil).ListObjectsV2), varargs...)
}
